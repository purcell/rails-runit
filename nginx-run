#!/bin/bash -e

. ../../bootstrap
PORT=$(basename "$(pwd)"|awk -F- '{print $2}')
BACKEND_PORT=$(basename "$(pwd)"|awk -F- '{print $3}')

TEMP_BASE_DIR=/var/tmp/${USER}-nginx-${PORT}
if [ ! -d "$TEMP_BASE_DIR" ]; then
  mkdir -p "$TEMP_BASE_DIR";
  chmod og-rwx "$TEMP_BASE_DIR";
fi

cat <<EOF > nginx.conf
### DO NOT EDIT - THIS IS REGENERATED WHEN NGINX STARTS: SEE $0 ###
daemon off;

pid ${TEMP_BASE_DIR}/pid;  # we don't want this, but it's mandatory

worker_processes 4;

error_log ${APP_DIR}/log/nginx-errors.log;

events {
    worker_connections  1024;
}


http {
  # See http://wiki.nginx.org/NginxHttpLimitReqModule
  # and http://sysarcana.com/2010/05/26/rate-limiting-with-nginx/
  limit_req_zone  \$proxy_add_x_forwarded_for zone=one:10m rate=100r/m;

  #access_log ${APP_DIR}/log/access.log;
  access_log off;

  server_tokens off;

  fastcgi_temp_path ${TEMP_BASE_DIR}/fastcgi;
  uwsgi_temp_path ${TEMP_BASE_DIR}/uwsgi;
  scgi_temp_path ${TEMP_BASE_DIR}/scgi;
  client_body_temp_path ${TEMP_BASE_DIR}/client-body 1 2;
  proxy_temp_path ${TEMP_BASE_DIR}/proxy;

  include       mime.types;
  default_type  application/octet-stream;
  client_max_body_size 50m;

  sendfile        on;

  tcp_nopush     on;
  keepalive_timeout  65;
  tcp_nodelay        on;

  gzip on;
  gzip_vary on;
  gzip_disable "msie6";
  gzip_comp_level  3;
  gzip_buffers     16 8k;
  gzip_min_length  150;
  gzip_proxied     any;
  gzip_types       text/plain text/xhtml text/css text/js text/csv application/javascript application/x-javascript application/json application/xml text/xml application/atom+xml application/rss+xml;

  upstream backend {
    server 127.0.0.1:$BACKEND_PORT;
  }

  server {
    listen       127.0.0.1:${PORT};
    set_real_ip_from 127.0.0.1;
    real_ip_header X-Forwarded-For;

    root ${APP_DIR}/public;
    index index.html index.htm;

    # Optimised handling of static assets with trailing numeric
    # "-TIMESTAMP"
    if (\$http_host ~* "^assets[0-9]*\\.(.*)") {
      set \$asset_parent_domain \$1;
      set \$rewrite_asset t;
    }
    rewrite "^(/[^?]+)(-[0-9]{10})(\\..*)" \$1\$3 last;
    if (!-f \$request_filename) {
      set \$rewrite_asset "\${rewrite_asset}t";
    }
    if (\$rewrite_asset = tt) {
      rewrite ^ http://\$asset_parent_domain\$request_uri redirect;
    }


    location / {
      # Handle as regular static files those requests URIs which
      # exactly match filenames. Requests for static files with query
      # params (e.g. "?12353234") fall through to the
      # @static_with_params location
      try_files \$request_uri/index.html \$request_uri.html \$request_uri @static_with_params;
      add_header Cache-Control "public";
    }
    location @static_with_params {
      # Special handling for static file requests with query params,
      # which we assume identify resources which will never change. In
      # other words, the query params incorporate a timestamp or other
      # unique element.
      try_files \$uri/index.html \$uri.html \$uri @backend;
      # These 2 lines are like "expires max;", but with public caching permitted
      add_header Expires "Thu, 31 Dec 2037 23:55:55 GMT";
      add_header Cache-Control "public, max-age=315360000";
    }

    location @backend {
      proxy_set_header X-Real-IP       \$remote_addr;
      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
      proxy_set_header Host            \$http_host;
      proxy_read_timeout 120;
      proxy_redirect off;
      proxy_pass http://backend;
    }

    error_page 500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }
}
EOF

exec nginx -p "$PWD/" -c nginx.conf 2>&1 || echo "do you need to create the symlink '$BASE/bin/nginx?'"
